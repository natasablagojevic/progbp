/*
Napisati C/SQL program u kojem se naredbe izvršavaju dinamički. Izdvojiti naredne podatke o studijskim programima: identifikator, oznaka i naziv, za svaki studijski program čiji se identifikator nivoa unosi sa standardnog ulaza.
*/

#include <stdio.h>
#include <stdlib.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 hID;
char hOznaka[11];
char hNaziv[51];
char hNaredba[255];
short hIdNivoa;
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg)
{
  if (sqlca.sqlcode < 0) {
    char buf[1024];
    short bufSize = sizeof(buf);
    short lineWidth = 50;
    sqlaintp(buf, bufSize, lineWidth, &sqlca);

    fprintf(stderr, "%d: %s\n", sqlca.sqlcode, msg);
    fprintf(stderr, "%s\n\n", buf);

    EXEC SQL CONNECT RESET;
      exit(EXIT_FAILURE);
  }
}

int main()
{
  EXEC SQL CONNECT TO stud2020;
  checkSQL("CONNECTION FAILED");

  printf("Unesite ID nivoa: ");
  scanf("%hd", &hIdNivoa);

  sprintf(hNaredba, "SELECT ID, OZNAKA, NAZIV FROM DA.STUDIJSKIPROGRAM WHERE IDNIVOA = ?");

  EXEC SQL 
    PREPARE pStudijskiProgrami
    FROM :hNaredba;
  checkSQL("PREPARE STATEMENT FAILED");

  EXEC SQL 
    DECLARE cStudPrograms
    CURSOR FOR pStudijskiProgrami;
  checkSQL("DECLARE SELECT STATEMENT FAILED");

  EXEC SQL 
    OPEN cStudPrograms
    USING :hIdNivoa;
  checkSQL("OPEN cStudPrograms FAILED");

  while (1) {
    
    EXEC SQL 
      FETCH cStudPrograms
      INTO :hID, :hOznaka, :hNaziv;
    checkSQL("FETCH cStudPrograms FAILED");
    
    if (SQLCODE == 100)
      break;

    printf("%d %s %s\n", hID, hOznaka, hNaziv);

  }

  EXEC SQL CLOSE cStudPrograms;
  checkSQL("CLOSE cStudPrograms FAILED");

  EXEC SQL CONNECT RESET;
  checkSQL("CONNECTION RESET FAILED");
  return 0;
}