    --- TRANSAKCIJE --- 

- TRANSAKCIJA JE LOGICKA JEDINICA POSLA PRI RADU SA PODACIMA.
  - NE SME DA NARUSAVA USLOVE INTEGRITETA 

- KOMANDE - DESVA SE KRAJ TRANSAKCIJE, BILO KOJU OD OVE DVE NAREDBE DA POZOVEMO
  - COMMIT    - POTVRDJUJEMO IZMENE U BAZI, I NJIHOV UPIS JE TRAJAN
  - ROLLBACK  - NEUSPESAN KRAJ TRANSAKCIJE, SVE IZMENE SE PONISTE I NISU TRAJNO UPISANE U BAZU 
    - AKO SE DESI NEKA GRESKA - TJ. AKO SE BILO STA NE DESI USPESNO 

- PROGRAM MOZEMO DA IZDELIMO U VISE MANJIH TRANSAKCIJA
  - U DB2 NISU DOZVOLJENE UGNJEZDENE TRANSAKCIJE!       --- ZAPAMTITI !!!! 


- KONFLIKTI:
  1.  PROBLEM IZGUBLJENIH AZURIRANJA
      DESI SE DA SU OBA PROCITALA PODATAK PRE AZURIRANJA,
      POTOM JE TRANSAKCIJA B AZURIRALA NA OSNOVU PODATKA KOJI
      JE PROCITALA PRE AZURIRANJA TRANSAKCIJE A 

  2.  PROBLEM ZAVISNOSTI OD NEPOTVRDJENIH PODATAKA 
      A CITA NEKI SLOG R, B AZURIRA TAJ SLOG R I VRSI ROLLBACK 
      KADA SE DESI DA B IZVRSI ROLLBACK (NESTO SE POGRESILO), 
      DESICE SE TO DA CE A DA NASTAVI DA RADI SA NEPOTVRDJENIM PODACIMA.

      B URADI AZURIRANJE NAD SLOGOM R, POTOM A IZVRSI AZURIRANJE 
      NA OSNOVU INFORMACIJE KOJU JE B POSTAVILA. NAKON TOGA B RADI 
      ROLLBACK. I OPET SE DESAVA DA A RADI SA NEPOTVRDJENIM PODACIMA.

  3.  PROBLEM NEKOZISTENTNE ANALIZE 
      A PRVO PROCITA PODATKE, POTOM B ULECE SA SVOJIM ZADATKOM 
      ODRADI I VRSI COMMIT. POTOM A RADI NAD ISTIM PODACIMA KAO I B 
      I DOLAZI DO NEKOZISTENTNE ANALIZE.

  - VRSIMO SEKVENCIJALNO IZVRSAVANJE, I TIME NE DOZVOLJAVAMO KONKURENTNOST,
    ALI KAKO NAMA TREBA APLIKACIJA DA BUDE U STANJU DA MOZE KONKURENTNO DA
    IZVRSAVA, POTREBNO JE UVESTI ZAKLJUCAVANJE.

- ZAKLJUCAVANJE KORISTIMO KAKO BISMO OBEZBEDILI DA NE DODJE DO 
  NEKIH KONFLIKTA 
  - POSTAVLJANJE KATANCA NA OBJEKAT 
  - KARAKTERISTIKE KATANCA:
    - VRSTA, MOD, REZIM = STA JE DOZVOLJENO VLASNIKU I KOJI NACINI PRISTUPA SU DOZVOLJENI KONKURENTNIM KORISNICIMA
    - OBJEKAT           = STA JE TO STO ZAKLJUCAVAMO? RED, TABELA, ...
    - TRAJANJE          = KOLIKO DUGO SE KATANAC DRZI, ZAVISI OD NIVOA IZOLOVANOSTI 

  - VRSTE KATANACA:
    - DELJIVI (S - SHARED) = KADA ZELIMO NESTO DA PROCITAMO, NISTA NAM NE SMETA DA I NEKO DRUGI CITA TE ISTE PODATKE
    - PRIVATNI/ESKLUZIVNI (X-EXCLUSIVE) = AKO VRSIMO NEKA AZURIRANJA, NE DOZVOLJAVAMO OSTALIMA DA U ISTOM TRENUTKU
      KORISTE TE ISTE PODATKA

  - DVOFAZNI PROTOKOL ZAKLJUCAVANJA (TWO FACE LOCKING = 2FL)
    IMAMO DVE FAZE:
      1.  GROWING PHASE 
          - TRAZE SE RAZNI KATANCI, DOK NE DOJEMO DO TRENUTKA KADA JE 
            SVE ZAKLJUCANO (LOCKED PHASE)
          - NEMA NIJEDNOG OTKLJUCAVANJA; OVDE SE STVARI SAMO ZAKLJUCAVAJU
          - NEMA NIJEDNOG OSLOBADJANJA KATANACA 

      2.  SHRINKING PHASE 
          - KADA POCNEMO DA OTKLJUCAVAMO, NE DESAVA SE NIJEDNO 
            ZAKLJUCAVANJE KATANACA 
          - CIM OSLOBODIMO PRVI KATANAC, NAKON TOGA MOZEMO SAMO 
            DA OSLOBADJAMO KATANCE 

    - AKO SE KORISI STRIKTNO DVOFAZNO ZAKLJUCAVANJE 
      ONDA CE EFEKAT PRIMENE NEKIH TRANSAKCIJA BITI 
      ISTI KAO DA SU SE TE TRANSAKCIJE ODVOJENO SERIJSKI 
      IZVRSAVALE, BEZ KONKURENTNOSTI 

    - X KATANCI SE OSLOBADJAJU TEK NA KRAJU 
      KADA SE POTVRDE SA COMMIT/ROLLBACK 

    - TRANSAKCIJA KADA JE U STANJU CEKANJA 
      ONA JE U TOM STANJU DOK SE NE OSLOBODI 
      TAJ KATANAC KOJI ONA ZELI DA POSTAVI (
      KOJI NJU SPRECAVA DA POSTAVI TAJ KATANAC)
      MORA DA POSTOJI MEHANIZAM KOJI NE DOZVOLJAVA 
      BESKONACNO CEKANJE 
    
    - MRTVA PETLJA (DEAD LOCK) = SITUACIJA U KOJIJ I JEDNA 
      I DRUGA TRANSAKCIJA CEKAJU NA DODLEU KATANACA  
      (SITUACIJA U KOJOJ 2> TRANSAKCIJE CEKAJU JEDNI NA DRUGE 
      KAKO BI OSLOBODILI RESURSE, ALI NIJEDNA OD NJIH NE MOZE 
      NASTAVITI DALJE JER SU MEDJUSOBNO BLOKIRANI) 

    - RESAVANJE PROBLEMA MRTVE PETLJE = MORA DA SE NADJE ZRTVA 
      TRANSAKCIJA, JEDNA OD ONIH KOJE UCESTVUJU U CIKLUSU U MRTVOJ 
      PETLJI I DA SE ONA PROGLASI ZA ZRTVU, NAD NJOM CEMO DA 
      IZVRSIMO ROLLBACK. 

  - ZAKLJUCAVANJE SA NAMEROM 
    TRANSAKCIJA CE DA ISKAZE NAMERU DA ZELI DA IZVRSI ZAKLJUCAVANJE 
    MOZE DA KORISTI MALO SPECIFICNIJE KATANCE 
    
    - IS (INTENT SHARE) = DAJE NAMERU DA ZELI DA POSTAVI S KATANAC 
      - NAJMANJE JE RESTRIKTIVAN, IZRAZAVAMO SAMO NAMERU DA ZELIMO DA CITAMO
        KAD TRANSAKCIJA DOBIJE IS KATANAC, ONA ZAPRAVO POSTAVI NAD POJEDINACNIM 
        N-TORKAMA TABELE. KADA BUDE HTELA DA ZAISTA CITA TE PODATKE, POTREBNO 
        JE DA DOBIJE S KATANAC NAD TIM REDOM.
    - IX (INTENT EXCLUSIVE) = HOCE DA ISKAZE NAMERU DA DOBIJE X KATANAC 
    - SIX (SHARE WITH INTENT EXCLUSIVE) = DOBIJAMO S KATANAC, A IMAMO NAMERU DA AZURIRAMO 
      - TRANSAKCIJA KOJA DOBIJE OVAKVU VRSTU KATANCA, MOZE DA CITA, MOZE DA MENJA POJEDINACNE
        REDOVE, ALI PRE NEGO STO ZAPRAVO CITA ILI MENJA TAJ RED MORA PRVO DA DOBIJE 
        KATANAC ILI S ILI X NAD TIM KONKRETNIM REDOVIMA KOJE CITA ILI MENJA 
    - S = 
    - X = 
    - U = IZMEDJU X I S KATANCA, U SITUACIJAMA KADA IMAMO TANSAKCIJU KOJA ZELI DA CITA  
          ALI ZELI I NAKNADNO DA MENJA NEKI RED 
    - Z (SUPER EXCLUSIVE) = KORISTI SE RETKO, KADA HOCEMO DA MENJAMO STRUKTURU TABELE, KADA HOCEMO DA 
      RADIMO VELIKE IZMENE NAD TABELOM 

--------------------------------------------------------------------------------------------------

  ---  ZAKLJUCAVANJE U DB2 ---

- DB2 MOZE DA ZAKLJUCA TABELU, ILI STRANICE ILI REDOVE 
  - PODESAVA SE NA NIVOU TABELE 
  - SVAKOJ TABELI MOZE DA SE POSTAVI KONKRETAN KATANAC  

- NE ZELIMO DA JEDNA APLIKACIJA ZAUZME SVE KATANCE => PODESAVANJE ESKALACIJA KARANACA
  - ESKALACIJA KATANACA JE KADA SE VECI BROJ KATANACA MANJE GRANULARNOSTI 
    ZAMENI SA MANJIM BROJEM KATANCA VECE GRANULARNOSTI 

  - PODESAVAMO VREME KOLIKO DUGO SE CEKA NA KATANAC 

  - KOLIKO CESTO SE PROVERAVA DA LI JE DOSLO DO MRTVE PETLJE 

---------------------------------------------------------------------------------------------------

  --- NIVOI IZOLOVANOSTI ---

- IZVRASAVANJE TRANSAKCKIJE MOZE DA BUDE:
  1. PLANIRANO = KADA MI ZAVRSIMO SA COMMIT/ROLLBACK NAREDBOM 
  2. NEPLANIRANO = KADA SE ZAVRSI USLED NEKE GRESKE KOJU MI NISMO PROVERAVALI 
  
- PAD TRANSAKCIJE (MOZEMO DA IMAMO RAZLICITE PADOVE, KADA POCINJE OPORAVAK?)

- ACID SVOJSTVA TRANSAKCIJE:
  - A (ATOMICITY) = TRANSAKCIJA SE IZVRSAVA U CELOSTI ILI SE U OPSTE NE IZVRSAVA 
  - C (CONSISTENCY) = TRANSAKCIJA PREVODI BAZU IZ JEDNOG KONZISTENTNOG STANJA, U DRUGO KONZISTENTNO STANJE 
  - I (ISOLATION) = EFEKTI IZVRSENJA JEDNE TRANSAKCIJE SU NEPOZNATI DRUGIM TRANS DVE DOK NE ZAVRSI USPESNO SVOJ RAD 
  - D (DURABILITY) = SVI EFEKTI USPESNO ZAVRSENE TRANSAKCIJE SU TRAJNI 

- NIVOI IZOLOVANOSTI:
  1.  SERIALIZABLE     = NAJSTROZIJI; IMAMO DA SU SE SKROZ SERIJSKI IZVRSAVALE NASE TRANSAKCIJE 
      - NARUSAVANJE SERIJABILNOSTI:
        - PRLJAVO CITANJE (DIRTY READ) = ZAVISNOST OD NEPOTVRDJENIH PODATAKA 
        - NEPONOVLJIVO CITANJE - TRANSAKCIJA B PONOVNIM CITANJEM DOBIJA DRUGRACIJI REZULTAT 
        - FANTOMSKO CITANJE - (FANTOMSKI SLOG/RED - POJAVIO SE DODATNI RED KOJI MALOPRE NIJE POSTOJAO)
  2.  REPETABLE READ   =
  3.  READ COMMITED    =
  4.  READ UNCOMMITED  =

  --- NIVOI IZOLOVANOSTI U DB2 ---
  1.  REPETABLE READ (RR)
      - ODGOVARA SERIALIZABLE NIVOU IZOLOVANOSTI (TOM NAJSTROZIJEM)
      - PODRAZUMEVA: IMAMO ZAKLJUCAVANJE SVIH VRSTA KOJIMA SE TRANSAKCIJA 
        OBRACA, A NE ONIH KOJI ZADOVOLJAVA USLOVE UPITA. (ZAKLJUCAVA SE CELA TABELA, I TIME
        SE NECE DESITI NIJEDNI PROBLEMI)
  2.  READ STABILITY (RS) 
      - ZAKLJUCAVAJU SE SAMO ONI REDOVI KOJI ZADOVOLJAVAJU USLOV UPITA 
      - MOZE DA SE DESI FANTOMSKO CITANJE
      - ZAKLJUCAVAJU SE SAMO ONE VRSTE KOJE TRANSAKCIJA TRENUTNO CITA, ONE KOJE 
        JE PROCITALA OSTAJU OTKLJUCANI 
  3.  CURSOR STABILITY (CS) 
      - CURRENTLY COMMITED (CC)
        - PODTIP CS 
        - CITAJU SE POTVRDJENI PODACI
  4.  UNCOMMITED READ (UR)
      - NEPOTVRDJENI PODACI 
      - CITA I MENJA PODATKE BEZ TRAZENJA KATANCA 
      - ODGOVARA SAMO ZA READ ONLY TABELE, ONE IZ KOJIH 
        SAMO CITAMO 

- KATANCE MOZEMO DA DEFINISEMO U OKVIRU KURSRA 

------------------------------------------------------------------

  --- OPORAVAK ---

- 