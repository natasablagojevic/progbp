/*
Napisati C/SQL program koji za svaki predmet koji se ne nalazi u tabeli OBRADJENIPREDMETI izlistava njegov naziv i ESPB. Korisniku se nudi opcija da poveća broj bodova za 1. Obrada 5 uzastopnih predmeta predstavlja jednu transakciju. Nakon svakog 5. predmeta pitati korisnika da li želi da nastavi sa daljim izmenama. Ukoliko ne želi, program se prekida. U suprotnom, nastaviti sa daljom obradom predmeta.
*/

#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION; 
sqlint32 hID;
char hNaziv[151];
short hESPB;
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg)
{
  if (SQLCODE < 0) {
    fprintf(stderr, "%d: %s", SQLCODE, msg);

    EXEC SQL ROLLBACK;

    EXEC SQL CONNECT RESET;
    exit(EXIT_FAILURE);
  }
}

int main()
{ 
  EXEC SQL CONNECT TO stud2020;
  checkSQL("Connection failed");

  EXEC SQL 
    DECLARE cPredmeti 
    CURSOR WITH HOLD FOR 
      SELECT ID, NAZIV, ESPB
      FROM DA.PREDMET P
      WHERE ID NOT IN (SELECT IDPREDMETA FROM DA.OBRADJENIPREDMETI)
    FOR UPDATE OF ESPB;
  checkSQL("DECLARE CURSOR cPredmeti FAILED");

  EXEC SQL OPEN cPredmeti;
  checkSQL("OPEN CURSOR cPredmeti FAILED");

  int brojac = 0;

  while (1) {
    EXEC SQL 
      FETCH cPredmeti
      INTO :hID, :hNaziv, :hESPB;
    checkSQL("FETCH CURSOR cPredmeti FAILED");

    if (SQLCODE == 100) 
      break;
    
    printf("%s %hd\n", hNaziv, hESPB);
    printf("Da li zelite da uvecate broj ESPB za 1? [d/n]");

    char response = getchar();
    getchar();

    if (response == 'd') {
      // AZURIRANJE 
      EXEC SQL 
        UPDATE DA.PREDMET 
        SET ESPB = ESPB + 1
        WHERE CURRENT OF cPredmeti;
      checkSQL("UPDATE DA.PREDMET FAILED");
    }

    // UNOS ID U OBRADJENI PREDMETI
    EXEC SQL 
      INSERT INTO DA.OBRADJENIPREDMETI 
      VALUES (:hID);
    checkSQL("INSERT DA.OBRADJENIPREDMETI FAILED");

    brojac++;

    // POTVRDJIVANJE TRANSAKCIJE

    if (brojac == 5) { // brojac % 5 == 0
      EXEC SQL COMMIT;
      checkSQL("COMMIT FAILED");

      printf("Transakcija je gotova!\n\n");

      brojac = 0;
    }

    printf("Da li zelite da nastavite? [d/n]");
    response = getchar();
    getchar();

    if (response == 'n')
      break;
  }

  EXEC SQL CLOSE cPredmeti;
  checkSQL("CLOSE CURSOR cPredmeti FAILED");

  EXEC SQL COMMIT;
  checkSQL("COMMIT - KRAJ PROGRAMA");

  EXEC SQL CONNECT RESET;
  checkSQL("Stopping connection failed");

  return 0;
}