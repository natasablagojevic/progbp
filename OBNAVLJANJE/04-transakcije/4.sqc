#include <stdio.h>
#include <stdlib.h>
#include <string.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 hId;
short hESPB;
char hNaziv[151];
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg)
{
  if (SQLCODE < 0) {
    fprintf(stderr, "%d: %s\n", SQLCODE, msg);

    EXEC SQL ROLLBACK;

    EXEC SQL CONNECT RESET;

    exit(EXIT_FAILURE);
  }
}

int main()
{
  EXEC SQL CONNECT TO stud2020;
  checkSQL("CONNECT FAILED");

  EXEC SQL 
    DECLARE cPredmeti
    CURSOR WITH HOLD FOR 
      SELECT NAZIV, ESPB, ID
      FROM DA.PREDMET P 
      WHERE P.ID NOT IN (
        SELECT OP.IDPREDMETA 
        FROM DA.OBRADJENIPREDMETI OP
      ) 
    FOR UPDATE OF ESPB;
  checkSQL("DECLARE CUROSR FAILED");

  EXEC SQL OPEN cPredmeti;
  checkSQL("OPEN CURSOR FAILED");

  int brojac = 0;

  while (1) {

    EXEC SQL 
      FETCH cPredmeti
      INTO :hNaziv, :hESPB, :hId;
    checkSQL("FETCH CURSOR FAILED");

    if (SQLCODE == 100)
      break;

    printf("%s %hd\n", hNaziv, hESPB);

    brojac++;

    printf("Da li zelite da povecate broj bodova za 1? [da/ne] ");
    char odg[3];
    scanf("%s", odg); 

    if (strcmp(odg, "da") == 0) {
      // AZURIRANJE ESPB + 1

      EXEC SQL 
        UPDATE DA.PREDMET 
        SET ESPB = ESPB + 1
        WHERE CURRENT OF cPredmeti;
      checkSQL("UPDATE DA.PREDMET FAILED");

      printf("Uspesno ste azurirali predmet!\n");
    }

    EXEC SQL 
      INSERT INTO DA.OBRADJENIPREDMETI 
      VALUES (:hId);
    checkSQL("INSERT DA.OBRADJENIPREDMETI");

    if (brojac % 5 == 0) {
      EXEC SQL COMMIT;
      checkSQL("COMMIT WHILE FAILED"); 

      printf("Nastavi? [da/ne]");
      scanf("%s", odg);

      if (strcmp(odg, "ne") == 0)
        break;
    }
  }

  EXEC SQL CLOSE cPredmeti;
  checkSQL("CLOSE CURSOR FAILED");

  EXEC SQL COMMIT;
  checkSQL("COMMIT MAIN FAILED");

  EXC SQL CONNECT RESET;
  checkSQL("CONNECT RESET FAILED");

  return 0;
}