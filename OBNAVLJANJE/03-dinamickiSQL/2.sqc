#include <stdio.h>
#include <stdlib.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
short hSkGodina;
char hOznakaRoka[21];
char hNaziv[31];
char hDatPocetka[11];
char hDatKraja[11];
char hStatement[1024];
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg)
{
  if (sqlca.sqlcode < 0) {

    char buf[1024];
    short bufSize = sizeof(buf);
    short lineWidth = 50;

    sqlintp(buf, bufSize, lineWidth, &sqlca);

    fprintf(stderr, "%d: %s\n", sqlca.sqlcode, msg);
    fprintf(stderr, "%s\n\", buf);

    EXEC SQL CONNECT RESET;
    exit(EXIT_FAILURE);
  }
}

int main()
{
  EXEC SQL CONNECT TO stud2020;
  checkSQL("CONNECT FAILED");

  sprintf(hStatement, "INSERT INTO DA.ISPITNIROK VALUES (?,?,?,?,?)");

  EXEC SQL 
    PREPARE pInsert
    FROM :hStatement;
  checkSQL("PREPARE FAILED");

  printf("SKGODINA: ");
  scanf("%hd", &hSkGodina);

  printf("OZNAKAROKA: ");
  scanf("%s", hOznakaRoka);

  printf("NAZIV: ");
  fgets(hNaziv, sizeof(hNaziv), stdin);
  hNaziv[strcspn(hNaziv, "\n")] = '\0';

  printf("DATPOCETKA: ");
  scanf("%s", hDatPocetka);

  printf("DATKRAJA: ");
  scanf("%s", hDatKraja);

  EXEC SQL 
    EXECUTE pInsert
    USING :hSkGodina, :hOznakaRoka, :hNaziv, :hDatPocetka, :hDatKraja;
  checkSQL("EXECUTE FAILED");

  printf("Novi ispitni rok je uspesno unet!\n");

  EXC SQL CONNECT RESET;
  checkSQL("CONNECT RESET FAILED");

  return 0;
}