/*
Napisati C/SQL program kojim se za svaki od studijskih programa korisniku postavlja pitanje da li želi da uveća broj bodova za 10. Ako je odgovor potvrdan, vrši se odgovarajuća promena.
*/

#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 hId;
char hOznaka[11];
char hNaziv[51];
short hIdNivoa;
short hObimESPB;
char hZvanje[101];
struct 
{
  short int length;
  char data[32700];
} hOpis;
short hIndOpis;

EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg)
{
  if (SQLCODE < 0) {
    fprintf(stderr, "%s : %d", msg, SQLCODE);

    EXEC SQL CONNECT RESET;
    exit(EXIT_FAILURE);
  }
}

int main() 
{
  EXEC SQL CONNECT TO stud2020;
  checkSQL("Konekcija");

  // declare 
  EXEC SQL 
    DELARE cStudProgram CURSOR FOR 
    SELECT id, oznaka, naziv, idnivoa, obimespb, zvanje, opis
    FROM da.studijskiProgram 
    FOR UPDATE OF obimespb; // koju kolonu zelim da azuriram
  checkSQL("DECLARE CURSOR FOR UPDATE failed");

  // open 
  EXEC SQL 
    OPEN cStudProgram;
  checkSQL("OPEN CURSOR failed");

  // fetch 
  while (1) {
    EXEC SQL 
      FETCH cStudProgram
      INTO :hInd, :hOznaka, :hNaziv, :hIdNivoa, :hObimESPB, :hZvanje, :hOpis :hIndOpis;
    checkSQL("FETCH CURSOR failed");

    if (SQLCODE == 100)
      break;

    printf("|%-5d|%-6s|%-30.30s|%-4hd|%-4hd|%-30.30s|%-50.50s|\n", 
               hId, hOznaka, hNaziv, hIdNivoa,hObimESPB, hObimESPB, 
               hZvanje, (hIndOpis < 0) ? "NULL" : hOpis.data);
    
    printf("Da li zelite da uvecate broj espb za 10?\n");
    char odgovor;
    scanf("%c", odgovor);

    if (odgovor == 'd') {
      EXEC SQL 
        UPDATE da.studijskiProgram 
        SET obimESPB = obimESPB + 10 
        WHERE CURRENT OF cStudProgram;
      checkSQL("UPDATE CURSOR failed");

      EXEC SQL 
        SELECT obimespb 
        INTO :hObimESPB
        FROM da.studijskiProgram 
        WHERE id = :hId;
      checkSQL("SELECT-INTO failed");
    
      printf("Sada je obim esbp ovog studprograma uvecan za: %d\n", hObimESPB);
    }
  }

  // close 
  EXEC SQL 
    CLOSE cStudProgram;
  checkSQL("CLOSE CURSOR failed");


  EXEC SQL CONNECT RESET;
  checkSQL("Prekid konekcije");

  return 0;
}
