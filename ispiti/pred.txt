1.  RAZLIKE IZMEDJU STATICKOG I DINAMICKOG SQL. PREDNOSTI I MANE.

    KOD STATICKOG SQL CELA NAREDBA JE POZNATA U FAZI PRETPROCESIRANJA TJ.
    FAZI KOMPILACIJE, DOK KOD DINAMICKOG SQL NE ZNAMO UNAPRED NAREDBU U 
    FAZI PRETRPOCESIRANJA VEC SAMO DEO, DOK JE CELA NAREDBA POZNATA U 
    FAZI IZVRSAVANJA. 

    STATICKI:
      - PREDNOSTI: BRZE IZVRSAVANJE, VECA BEZBEDNOST, 
      - MANE: FLEKSIBILNOST - NE MOZE LAKO DA SE PRILAGODI NA PROMENE 

    DINAMICKI:
      - PREDNOSTI: FREKSIBILAN, PRILAGODLJIVOST, JEDNOSTAVNO RUKOVANJE
          PROMENAMA 
      - MANE: PERFOMANSE, BEZBEDNOST, KOMPLEKSNOST


2.  STA SU KURSORI? ZA STA SE KORISTE? STA MORA DA IM SE URADI PRE NEGO
    STO MOGU DA SE KORISTE I KAKO GLASE NAREDBE?
  
    KURSORI SU OBJEKTI KOJI NAM SLUZE ZA ITERIRANJE KROZ SELECT NAREDBU 
    KADA ONA VRACA VISE OD JEDNOG REDA KAO REZULTAT. 
    
    DA BISMO MOGLI DA KORISTIMO KURSORE POTREBNO JE PRVO GA DEKLARISATI:
      DECLARE <NAZIV-KURSORA>
      CURSOR [WITH HOLD] FOR <UPIT>
      [FOR UPDATE OF | FOR READ ONLY]

    POTOM JE POTREBNO OTVORITI GA:
      OPEN <NAZIV-KURSORA>
      [USING <LISTA-HOST-PROMENLJIVIH>]

    DOHVATANJE REDOVA IZ KURSORA:
      FETCH <NAZIV-KURSORA>
      INTO <LISTA-HOST-PROMENLJIVIH>

    ZATVARANJE KURSORA:
      CLOSE <NAZIV-KURSORA>

3.  POREDJATI FUNKCIJE PO REDOSLEDU IZVRSAVANJA:
    SQLExecute, SQLPrepare, SQLBindCol, SQLBindParameter, SQLExecDirect

    1. SQLPrepare - PRIPREMA SQL UPIT 
    2. SQLBindParameter - VEZIVANJE PARAMETARA 
    3. SQLExecute - IZVRSAVA PRIPREMLJENU NAREDBU 
    4. SQLBindCol - VEZIVANJE KOLONE REZULTATA 
    5. SQLExecDirect - IZVRSAVA SQL BEZ PRETHODNE PRIPREME

4.  SELECT INTO NAREDBA ZA STA SE KORISTI I KAKO SE PISE?

    SELECT INTO NAREDBA SE KORISTI KADA JE REZULTAT UPITA TACNO JEDAN RED.
    KOJA SE NA OSNOVU VREDNOSTI PRIMARNOG KLJUCA OBEZBEDJUJE DA CE 
    VRATI TACNO JEDAN RED.

    SELECT <LISTA-ATRIBUTA>
    INTO <LISTA-HOST-PROMENLJIVIH>
    FROM <TABELA>

5.  KADA SE executeUpdate U JDBC PISE SA ARGUMENTIMA, A KADA BEZ I NAD KOJIM
    TIPOVIMA PODATAKA SE IZVRSAVA?

    executeUpdate SE U JDBC PISE BEZ ARGUMENATA KADA KORISTIMO PRIPREMLJENU NAREDBU,
    TJ ONA SE POZIVA NAD OBJEKTOM KALSE PreparedStatement. DOK SE SA ARGUMENTOM NAVODI 
    UKOLIKO SE POZIVA NAD OBJEKTOM KLASE Statement.

    IZVRSAVA SE NAD : INSERT, UPDATE, DELETE.

6.  DVOFAZNI PROTOKOL ZAKLJUCAVANJA I STRIKTNI DVOFAZNI PROTOKOL ZAKLJUCAVANJA.
    
    DVOFAZNI PROTOKOL ZAKLJUCAVANJA SE SASTOJI IZ DVE FAZE:
      1.  FAZE ZAKLJUCAVANJA (FAZA RASTA) U KOME SE DODAJU ZAKLJUCAVANJA 
      2.  FAZA OTKLJUCAVANJA (FAZA SMANJENJA) U KOJOJ SE ZAKLJUCAVANJA OSLOBADJAJU. 
          JEDNOM KADA SE ZAPOCNE FAZA OTKLJUCAVANJA, NIJE MOGUCE PONOVO TRAZITI
          DA SE ZAKLJUCA NEKI OBJEKAT.

    STRIKTNI DVODFAZNI PROTOKOL ZAKLJUCAVANJA PODRZAVA DVOFAZNI PROTOKOL 
    ZAKLJUCAVANJA I JOS SE ESKLUZIVNI KATANAC OSLOBADJA TEK NA KRAJU TRANSAKCIJE.

7.  STA JE U KATANAC I CEMU SLUZI? STA TREBA DA IMA KURSOR DA BI 
    PODRZAVAO U KATANCE?

    U KATANAC PREDSTAVLJA HIBRID DELJENOG I ESKLUZIVNOG KATANCA. 
    ZAHTEVA SE U SITUACIJI KADA TRANSAKCIJA ZELI DA CITA, ALI CE 
    NAKNADNO ZELETI I DA MENJA PODATKE.

    DA BI KURSOR PODRZAO U KATANCE, MORA DA:
      1. DEKLARACIJA SA FOR UPDATE OF ILI CONCUR_UPDATEBLE
      2. PRISTUP REDOVIMA UZ MOGUCNOST AZURIRANJA
      3. ESKLUZIVNO ZAKLJUCAVANJE PRI AZURIRANJU

8.  ZA STA SE KORISTE @Entity i @Id? KAKO SE PISE PRIMARNI KLJUC KOJI IMA 
    VISE PROMENLJIVIH U ANOTACIJAMA? CEMU SLUZI @NamedQuery? 

    @Entity = KADA HOCEMO DA SVE KLASE BUDU TRAJNO SACUVANE
    @Id = DEFINISAN JE JEDINSTVENOG IDENTIFIKATORA INSTANCE OBJEKTA 

    KADA PRIMARNI KLJUC IMA VISE ATRIBUTA TADA KORISTIMO:
      @Embedable + @Id ili @EmbedableId

    @NamedQuery = DEFINISE UNAPRED IMENOVANI UPIT KOJI SE KASNIJE 
      MOZE KORISTITI UNUTAR APLIKACIJE --> POSTAVLJA SE NA NIVOU KLASE ENTITETA

9.  KAKO SE PISU VEZE "ONE-TO-ONE" I "MANY-TO-MANY" U ANOTACIJAMA.
    NAVESTI PRIMER. ZA STA SE KORISTI @Cascade? 

    @OneToOne
    @ManyToMany
    @Cascade = DODATNE INFORMACIJE ZA KONTROLU PONASANJA KASKADNIH OPERACIJA

    PRIMER: MANY-TO-MANY

      @Entity 
      public calss Student {
        @Id 
        private int indeks;
        private String ime;

        @ManyToMany(Cascade=CascadeType.All)
        private Set<Kurs> kursevi = new HashSet<>();
      }

      @Entity 
      public calss Kurs {
        @Id 
        private int id;
        private String naziv;

        @ManyToMany 
        private Set<Student> studenti = new HashSet<>();
      }

    PRIMER: ONE-TO-ONE 

      @Entity 
      public class Person {
        @Id 
        private int id;
        private String name;

        @OneToOne(cascade=CascadeType.All)
        private Address address;
      }

      @Entity 
      public class Address {
        @Id 
        private long id;
        private String street;
        private String city;
      }


10. INKREMENTALNO PRAVLJENJE REZERVNIH KOPIJA PODATAKA. KOJA NAREDBA 
    SE KORISTI DA SE NAPRAVI KOPIJA BAZE? KOJOM NAREDBOM SE BAZA REKONSTRUISE 
    DO PODLEDNJE KOPIJE?

    NAREDBA ZA PRAVLJENJE KOPIJE:
      BACKUP DATABASE <IME-BAZE> TO <DIREKTORIJUM> INCREMENTAL 

    NAREDBA ZA REKONSTRUKCIJU BAZE DO POSLEDNJE KOPIJE 
      RESTORE DATABASE <IME-BAZE> FROM <DIREKTORIJUM> TAKEN AT timestamp

    EXPORT TO <IME-DATOTEKE> OF <TIP-DATOTEKE> <SELECT-NAREDBA>