#include <stdio.h>
#include <stdlib.h>
#include <string.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
struct final
{
	sqlint32 schoolYear;
	char finalsLabel[21];
	char finalsName[31];
	char finalsStartDate[11];
	char finalsEndDate[11];
} hFinal;
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg)
{
	if (SQLCODE < 0) {
		fprintf(stderr, "%s : %d\n", msg, SQLCODE);

		EXEC SQL ROLLBACK;

		EXEC SQL CONNECT RESET;
		exit(EXIT_FAILURE);
	}
}

void prepareFinalsArray(struct final finalsArr[], const int n);

int main()
{
	EXEC SQL CONNECT TO stud2020;
	checkSQL("Konekcija");

	struct final finalsArr[12];
	int n = 12;

	prepareFinalsArray(finalsArr, n);

	EXEC SQL 
		DECLARE cFinals
		CURSOR WITH HOLD FOR 
			SELECT skgodina, oznakaroka, naziv, datpocetka, datkraja
			FROM da.ispitnirok;
	checkSQL("DECLARE CURSOR failed");

	printf("Unesite broj obaveznih ispitnih rokova: ");
	int numOfFinals;
	scanf("%d", &numOfFinals);

	int i = 0;
	for ( ; i < numOfFinals; i++) {
		hFinal.schoolYear = finalsArr[i].schoolYear;
		sprintf(hFinal.finalsLabel, "%s", finalsArr[i].finalsLabel);
		sprintf(hFinal.finalsName, "%s", finalsArr[i].finalsName);
		sprintf(hFinal.finalsStartDate, "%s", finalsArr[i].finalsStartDate);
		sprintf(hFinal.finalsEndDate, "%s", finalsArr[i].finalsEndDate);

		EXEC SQL 
			INSERT INTO da.ispitnirok 
			VALUES (:hFinal);
		checkSQL("INSERT INTO IR failed");
	}

	// KLJUNA TACKA

	EXEC SQL SAVEPOINT tacka_cuvanja ON ROLLBACK RETAIN CURSOR;
	checkSQL("SAVEPOINT failed");

	for ( ; i < n; i++) {
		hFinal.schoolYear = finalsArr[i].schoolYear;
		sprintf(hFinal.finalsLabel, "%s", finalsArr[i].finalsLabel);
		sprintf(hFinal.finalsName, "%s", finalsArr[i].finalsName);
		sprintf(hFinal.finalsStartDate, "%s", finalsArr[i].finalsStartDate);
		sprintf(hFinal.finalsEndDate, "%s", finalsArr[i].finalsEndDate);

		EXEC SQL 
			INSERT INTO da.ispitnirok 
			VALUES (:hFinal);
		checkSQL("INSERT INTO IR failed");
	}

	printf("-------------------------------------------------------------------\n");

	EXEC SQL 
		OPEN cFinals;	
	checkSQL("OPEN CURSOR failed");

	while (1) {

		EXEC SQL 
			FETCH cFinals
			INTO :hFinal;
		checkSQL("FETCH CURSOR failed");

		if (SQLCODE == 100) 
			break;

		printf("%d %s %s %s %s\n", hFinal.schoolYear, hFinal.finalsLabel, hFinal.finalsName, hFinal.finalsStartDate, hFinal.finalsEndDate);
	}


	printf("------------------------------------------------------------------\n");

	printf("Da li zelite da ponistite neobavezne ispitne rokove? ");
	int response;
	scanf("%d", &response);

	if (response == 1) {
		EXEC SQL ROLLBACK TO SAVEPOINT tacka_cuvanja;
		checkSQL("ROLLBACK TO SAVEPOINT failed");
	} else {
		EXEC SQL COMMIT;
		checkSQL("COMMIT2 failed");
	}

	printf("-----------------------------------------------------------------------\n");

	EXEC SQL 
		OPEN cFinals;	
	checkSQL("OPEN CURSOR failed");

	while (1) {

		EXEC SQL 
			FETCH cFinals
			INTO :hFinal;
		checkSQL("FETCH CURSOR failed");

		if (SQLCODE == 100) 
			break;

		printf("%d %s %s %s %s\n", hFinal.schoolYear, hFinal.finalsLabel, hFinal.finalsName, hFinal.finalsStartDate, hFinal.finalsEndDate);
	}


	EXEC SQL 
		CLOSE cFinals;
	checkSQL("CLOSE CURSOR failed");

	EXEC SQL COMMIT;
	checkSQL("COMMIT failed");
	
	EXEC SQL CONNECT RESET;
	checkSQL("Prekidanje konekcije");

	return 0;
}

void prepareFinalsArray(struct final finalsArr[], const int n)
{
	const char *monthsName = {"Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"};
	
	for (int i = 0; i < 12; i++) {
		finalsArr[i].schoolYear = 2022;
		sprintf(finalsArr[i].finalsLabel, "%.3s 22", monthsName[i]);
		sprintf(finalsArr[i].finalsName, "%s 2022", monthsName[i]);
		sprintf(finalsArr[i].finalsStartDate, "%2.2d/01/2022", i+1);
		sprintf(finalsArr[i].finalsEndDate, "%2.2d/10/2022", i+1);
	}
}